                                ~~~~~~~~~~~MODIFYING STATS~~~~~~~~~~~~~~

Throughout the game, stats can grow/deplete either by run progression 
    (leveling up, doing activities that buff stat & aptitutude values),
    buffs/debuffs (from battle or events), weapons, & meta progression (relics, achievements)

This calls for a modular system where entities can recieve different effects and have their stats 
updated accordingly, while also reverting stat changes when effects have expired. The systems
needs to keep in mind that stats can be permenantly altered as well.


---------------------------------Buffs, Debuffs, & Status Effects ---------------------------------

                            ~~~PROPERTIES & PROBLEMS TO SOLVE~~~
>duration - how long the effect lasts 
    (for... days, minutes, rounds, turns, moves/actions, ever, 
    afflictor's lifetime, another entity's lifetime)
>stat effects - what stat is affected, by how much. 
    -Should alterations effect:
        base stat number?
        true stat value?
        stat aptitude?
        multiple of the options at once?
        any one of the options?
>special effects - is this effect more than a stat modifier? Perhaps damage is dealt over time,
    actions are limited, outgoing damage from any source is affected, movement is better/worse
    or works completely different, like sliding around; an entity has control of another's turn,
    can the effect spread and how? 
    -Could new actions be available?
    -Can the effect do multiple things? Like increase action amount AND provide a new ability?
    -Are the effected only related to battle? Or can they affect sleep or base upkeep or how deep
    in a dungeon the player can go? 
    -What if the effect modified what spawns on a floor?
>interactions - are some special effects incompatible with one another? An entity can't be both
    wet and on fire, so what should happen if both are applied to an entity?
    Perhaps wetness has a higher priority than fire and so fire gets dispelled. 
    -Could having mutiple ailments create or merge into a new ailment? 
>stat association - status effects should relate to a stat, like inflicting "hungry" would
    relate to the Hunger stat. The stat of the afflictor's effect should then compare to the
    victim's resistance stat to dictate how long it lasts and its efficiency.
>resistance - The Recovery stat is used to reduce the duration and efficiency of a status effect,
    while the Hunger stat is used to resist/boost similarly, but only to plain debuffs/buffs.
    -How should the resistance or boost work for effects where it isn't obvious,
    like an ailment that stops the use of all combat moves? Perhaps Recovery only affects the
    duration if the effect cant numerically be represented. Otherwise the effectiveness would have
    to be hardcoded. 
    -Other stats could reduce the effectiveness of an ailment too, such as ones that come 
    from excess Fear or Stress. Default stat would be Recovery however.
>afflictors - What can inflict ailments? Almost anything should or can.
    (Entities, traps, discussions, items like food, weapons, armor, throwables; events like
    reaching a certain day or completing a sucessful dungeon run;)
>removal - Ailments will mostly be removed by the duration completing, but what others ways
    could it be removed? How specific would it be? Some moves could cleanse ailments, but 
    other ailments might have more specific conditions for removal.
>triggers - what if an ailment does something when a condition is met? Could it have a condition and
    a passive effect too? What could cause the condition and how would it know when it is met?
    For example, when a specific floor is reached, or when enough enemies are killed.
>types - some status effects should be organized or tagged in different groups that can all 
    subscribe to a behavior. Groups can be physical, mental, stat only (debuffs/buffs), or elemental.
    A group behavior could be that all mental effects are destroyed for a damage burst when X happens.

                                    ~Undesired Features~
>rank - Status effects do not need a ranking as their effectiveness can either be an 
    entirely new named effect or the enemy can have a high stat associated with the effect's power

                                     ~~~Deep Dive~~~

                                 ~Stat Memory & Alterations~
When stats are changed temporarily, the changes need to be memorized to later be reversed while
keeping permanent changes untouched. Bring in the Stat Board to track both permanent and temporary
stats values of characters. The idea is that 2 dicts of Stat objs are stored, memorized & current
respectively. Any time a stat is permenantly altered, both are updated with the change. When a 
stat is temporarily altered, only the current type is updated. The current stats are the values 
to be read when necessary.

Numerical changes of a stat are represented by <Alteration> classes, and are stored in
a list by a Character

class Alteration

    name - string title
    value - int or decimal that effects a stat
        any Integer [1, -1, etc..] EXCLUDING 0 
            which will simply be added to the appropriate aspect of a stat
        any decimal between -1 and 1 (inclusive)
            which will act as a percentage decrease or increase to a stat value
    duration - how long it lasts, trigger by <Time> class obj
    ef_stat - name of stat to effect
    ef_type - what aspect of the stat to affect 



Class StatBoard
    cur_stats
    main_stats



                                        ~Time~
Describes what event the effect is looking for and for how many triggers.